{"version":3,"sources":["index.js"],"names":["TodoItems","props","createTasks","bind","key","this","delete","item","className","onClick","text","listItems","entries","map","duration","easing","React","Component","TodoList","state","items","addItem","deleteItem","onUnload","recall","localStorage","getItem","JSON","parse","e","_inputBox","value","newItem","Date","now","setState","prevState","concat","console","log","preventDefault","filteredItems","filter","event","setItem","stringify","window","addEventListener","removeEventListener","onSubmit","ref","a","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"uOAMMA,G,kBACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHJ,E,oEAMZC,GACHC,KAAKJ,MAAMK,OAAOF,K,kCAGVG,GAAO,IAAD,OACd,OAAO,yBAAKC,UAAU,0BAA0BC,QAAS,kBAAM,EAAKH,OAAOC,EAAKH,MAAMA,IAAKG,EAAKH,KAC5F,yBAAKI,UAAU,aACX,wBAAIA,UAAU,cACTD,EAAKG,U,+BAKlB,IACIC,EADcN,KAAKJ,MAAMW,QACDC,IAAIR,KAAKH,aAErC,OACI,kBAAC,IAAD,CAAUY,SAAU,IAAKC,OAAO,QAC3BJ,O,GAzBOK,IAAMC,YA+BxBC,E,YACF,WAAYjB,GAAQ,IAAD,uBACf,4CAAMA,KACDkB,MAAQ,CACTC,MAAO,IAEX,EAAKC,QAAU,EAAKA,QAAQlB,KAAb,gBACf,EAAKmB,WAAa,EAAKA,WAAWnB,KAAhB,gBAClB,EAAKoB,SAAW,EAAKA,SAASpB,KAAd,gBAChB,IAAIqB,EAASC,aAAaC,QAAQ,SARnB,OASZF,GAAqB,KAAXA,KACT,EAAKL,MAAMC,MAAMO,KAAKC,MAAMJ,IAVjB,E,qEAiBXK,GACJ,GAA6B,KAAzBxB,KAAKyB,UAAUC,MAAc,CAC7B,IAAIC,EAAU,CACVtB,KAAML,KAAKyB,UAAUC,MACrB3B,IAAK6B,KAAKC,OAGd7B,KAAK8B,UAAS,SAACC,GACX,MAAO,CACHhB,MAAOgB,EAAUhB,MAAMiB,OAAOL,OAItC3B,KAAKyB,UAAUC,MAAQ,GAE3BO,QAAQC,IAAIlC,KAAKc,MAAMC,OACvBS,EAAEW,mB,iCAGKpC,GACP,IAAIqC,EAAgBpC,KAAKc,MAAMC,MAAMsB,QAAO,SAAUnC,GAClD,OAAQA,EAAKH,MAAQA,KAGzBC,KAAK8B,SAAS,CACVf,MAAOqB,M,+BAINE,GACLlB,aAAamB,QAAQ,QAASjB,KAAKkB,UAAUxC,KAAKc,MAAMC,U,0CAIxD0B,OAAOC,iBAAiB,eAAgB1C,KAAKkB,Y,6CAI7CuB,OAAOE,oBAAoB,eAAgB3C,KAAKkB,Y,+BAG1C,IAAD,OACL,OACI,yBAAKf,UAAU,gBACX,wBAAIA,UAAU,cAAd,SACA,0BAAMyC,SAAU5C,KAAKgB,SACjB,yBAAKb,UAAU,oBACX,2BAAOA,UAAU,wCAAwC0C,IAAK,SAACC,GAAD,OAAO,EAAKrB,UAAYqB,GAAGC,YAAY,eAErG,yBAAK5C,UAAU,sBACX,4BAAQA,UAAU,sBAAsB6C,KAAK,UAA7C,UAIR,kBAACrD,EAAD,CAAWY,QAASP,KAAKc,MAAMC,MAAOd,OAAQD,KAAKiB,kB,GAxEhDN,IAAMC,WA8E7BqC,IAASC,OACL,kBAACrC,EAAD,MACAsC,SAASC,eAAe,U","file":"static/js/main.a485d5f4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FlipMove from \"react-flip-move\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass TodoItems extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createTasks = this.createTasks.bind(this);\n    }\n\n    delete(key) {\n        this.props.delete(key);\n    }\n\n    createTasks(item) {\n        return <div className=\"card text-white bg-dark\" onClick={() => this.delete(item.key)} key={item.key}>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                    {item.text}</h5></div>\n        </div>\n    }\n\n    render() {\n        var todoEntries = this.props.entries;\n        var listItems = todoEntries.map(this.createTasks);\n\n        return (\n            <FlipMove duration={250} easing=\"ease\">\n                {listItems}\n            </FlipMove>\n        );\n    }\n};\n\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        };\n        this.addItem = this.addItem.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n        this.onUnload = this.onUnload.bind(this);\n        var recall = localStorage.getItem('items')\n        if(recall || recall === \"\") {\n            this.state.items=JSON.parse(recall);\n        }\n        else {\n            // sideBar not set in localStorage\n        }\n    }\n\n    addItem(e) {\n        if (this._inputBox.value !== \"\") {\n            var newItem = {\n                text: this._inputBox.value,\n                key: Date.now()\n            };\n\n            this.setState((prevState) => {\n                return {\n                    items: prevState.items.concat(newItem)\n                };\n            });\n\n            this._inputBox.value = \"\";\n        }\n        console.log(this.state.items);\n        e.preventDefault();\n    }\n\n    deleteItem(key) {\n        var filteredItems = this.state.items.filter(function (item) {\n            return (item.key !== key);\n        });\n\n        this.setState({\n            items: filteredItems\n        });\n    }\n\n    onUnload(event) { // the method that will be used for both add and remove event\n        localStorage.setItem('items', JSON.stringify(this.state.items));\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.onUnload)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.onUnload)\n    }\n\n    render() {\n        return (\n            <div className=\"todoListMain\">\n                <h1 className=\"text-white\">To-Do</h1>\n                <form onSubmit={this.addItem}>\n                    <div className=\"input-group mb-3\">\n                        <input className=\"form-control form-control-lg btn-dark\" ref={(a) => this._inputBox = a} placeholder=\"enter task\">\n                        </input>\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-lg btn-dark\" type=\"submit\">Add</button>\n                        </div>\n                    </div>\n                </form>\n                    <TodoItems entries={this.state.items} delete={this.deleteItem}/>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <TodoList/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}